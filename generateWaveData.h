/*      */ import java.io.File;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ class generateWaveData
/*      */ {
/*      */   ibisWaveTable currentWave;
/*      */   
/*      */   public int generateWaveData(ibisPin currentPin, ibisPin enablePin, ibisPin inputPin, ibisPin powerPin, ibisPin gndPin, ibisPin powerClampPin, ibisPin gndClampPin, ibisTypMinMax Vcc, ibisTypMinMax Gnd, ibisTypMinMax VccClamp, ibisTypMinMax GndClamp, int curveType, int spiceType, String spiceFile, String spiceCommand, int iterate, int cleanup, int index) {
/* 2869 */     String namePrefixBuffer, nodeList[] = new String[11];
/* 2870 */     int outputState = 0;
/* 2871 */     int nodeIndex = 0;
/* 2872 */     int i = 0;
/* 2873 */     ibisModel model_p = currentPin.model;
/*      */     
/* 2875 */     this.currentWave.waveData = new ibisWaveTableEntry[100];
/* 2876 */     this.currentWave.size = 100;
/*      */ 
/*      */     
/* 2879 */     for (int m = 0; m < 100; m++)
/*      */     {
/* 2881 */       this.currentWave.waveData[m] = new ibisWaveTableEntry();
/*      */     }
/*      */     
/* 2884 */     if (curveType == 8) {
/* 2885 */       outputState = 1;
/*      */     } else {
/* 2887 */       outputState = 0;
/*      */     } 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2896 */     nodeList[0] = currentPin.spiceNodeName;
/* 2897 */     for (i = 1; i < 11; i++) {
/* 2898 */       nodeList[i] = s2iString.dummyNodeName[i - 1];
/*      */     }
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2904 */     String loadBuffer = "";
/* 2905 */     if (!goodies.IS_USE_NA(this.currentWave.L_dut)) {
/*      */       
/* 2907 */       String str = s2iString.indString(spiceType, "LDUTS2I", nodeList[nodeIndex], 
/* 2908 */           nodeList[++nodeIndex], this.currentWave.L_dut);
/* 2909 */       loadBuffer = String.valueOf(loadBuffer) + str;
/*      */     } 
/*      */     
/* 2912 */     if (!goodies.IS_USE_NA(this.currentWave.R_dut)) {
/*      */       
/* 2914 */       String str = s2iString.resString(spiceType, "RDUTS2I", nodeList[nodeIndex], 
/* 2915 */           nodeList[++nodeIndex], this.currentWave.R_dut);
/* 2916 */       loadBuffer = String.valueOf(loadBuffer) + str;
/*      */     } 
/*      */     
/* 2919 */     if (!goodies.IS_USE_NA(this.currentWave.C_dut)) {
/*      */ 
/*      */       
/* 2922 */       String str = s2iString.capString(spiceType, "CDUTS2I", nodeList[nodeIndex], 
/* 2923 */           "0", this.currentWave.C_dut);
/* 2924 */       loadBuffer = String.valueOf(loadBuffer) + str;
/*      */     } 
/*      */     
/* 2927 */     String outputNodeName = nodeList[nodeIndex];
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2932 */     if (!goodies.IS_USE_NA(this.currentWave.L_fixture)) {
/*      */       
/* 2934 */       String str = s2iString.indString(spiceType, "LFIXS2I", nodeList[nodeIndex], 
/* 2935 */           nodeList[++nodeIndex], this.currentWave.L_fixture);
/* 2936 */       loadBuffer = String.valueOf(loadBuffer) + str;
/*      */     } 
/*      */     
/* 2939 */     if (!goodies.IS_USE_NA(this.currentWave.C_fixture)) {
/*      */       
/* 2941 */       String str = s2iString.capString(spiceType, "CFIXS2I", nodeList[nodeIndex], 
/* 2942 */           "0", this.currentWave.C_fixture);
/* 2943 */       loadBuffer = String.valueOf(loadBuffer) + str;
/*      */     } 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2949 */     String dummyBuffer = s2iString.resString(spiceType, "RFIXS2I", nodeList[nodeIndex], 
/* 2950 */         nodeList[++nodeIndex], this.currentWave.R_fixture);
/* 2951 */     loadBuffer = String.valueOf(loadBuffer) + dummyBuffer;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2959 */     String headerLine = "*Typ " + s2iString.curveNameString[curveType] + 
/* 2960 */       " curve for model " + model_p.modelName + "\n";
/*      */     
/* 2962 */     setPinDC setPinDC1 = new setPinDC();
/* 2963 */     if (enablePin != null) {
/* 2964 */       inputBuffer = setPinDC1.setPinDC(enablePin, model_p.enable, 
/* 2965 */           1, 
/* 2966 */           "ENA", 0, spiceType);
/*      */     } else {
/* 2968 */       inputBuffer = "";
/*      */     } 
/* 2970 */     setPinTran setPinTran1 = new setPinTran();
/* 2971 */     if (inputPin != null) {
/*      */       
/* 2973 */       dummyBuffer = setPinTran1.setPinTran(inputPin, model_p.polarity, outputState, 
/* 2974 */           "IN", 0, spiceType);
/* 2975 */       inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     } 
/*      */     
/* 2978 */     dummyBuffer = s2iString.DCSrcString(spiceType, "VFIXS2I", nodeList[nodeIndex], 
/* 2979 */         "0", this.currentWave.V_fixture);
/* 2980 */     String inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     
/* 2982 */     setupPwrAndTempCmds setupPwrTmpCmd = new setupPwrAndTempCmds();
/* 2983 */     setupPwrTmpCmd.setupPwrAndTempCmds(curveType, spiceType, powerPin, gndPin, 
/* 2984 */         powerClampPin, gndClampPin, Vcc.typ, Gnd.typ, 
/* 2985 */         VccClamp.typ, GndClamp.typ, model_p.tempRange.typ);
/* 2986 */     String powerBuffer = setupPwrTmpCmd.powerBuffer;
/* 2987 */     String temperatureBuffer = setupPwrTmpCmd.temperatureBuffer;
/*      */     
/* 2989 */     setupTranCommands setupTranCmd = new setupTranCommands();
/* 2990 */     String analysisBuffer = setupTranCmd.setupTranCommands(spiceType, model_p.simTime, 
/* 2991 */         outputNodeName);
/*      */     
/* 2993 */     if (index < 10) {
/* 2994 */       namePrefixBuffer = String.valueOf(s2iString.spiceFileTypPrefix[curveType]) + "0" + index;
/*      */     } else {
/* 2996 */       namePrefixBuffer = String.valueOf(s2iString.spiceFileTypPrefix[curveType]) + index;
/*      */     } 
/* 2998 */     setupSpiceFileNames setSpFlNames1 = new setupSpiceFileNames();
/* 2999 */     setSpFlNames1.setupSpiceFileNames(namePrefixBuffer, currentPin.pinName);
/* 3000 */     String spiceInFile = setSpFlNames1.spiceInFile;
/* 3001 */     String spiceOutFile = setSpFlNames1.spiceOutFile;
/* 3002 */     String spiceMsgFile = setSpFlNames1.spiceMsgFile;
/*      */     
/* 3004 */     setupSpiceInputFile setSpInFile = new setupSpiceInputFile();
/* 3005 */     if (setSpInFile.setupSpiceInputFile(iterate, spiceType, spiceInFile, headerLine, 
/* 3006 */         spiceFile, model_p.modelFileTyp, model_p.extSpiceCmdFile, loadBuffer, inputBuffer, powerBuffer, 
/* 3007 */         temperatureBuffer, analysisBuffer) == 1)
/*      */     {
/* 3009 */       return 1;
/*      */     }
/*      */     
/* 3012 */     callSpice callSpice1 = new callSpice();
/* 3013 */     checkForAbort checkAbort = new checkForAbort();
/*      */     
/* 3015 */     if (callSpice1.callSpice(iterate, spiceCommand, spiceType, spiceInFile, 
/* 3016 */         spiceOutFile, spiceMsgFile) == 1) {
/*      */ 
/*      */       
/* 3019 */       int returnFromAbort = checkAbort.checkForAbort(spiceType, spiceOutFile, spiceMsgFile);
/* 3020 */       if (returnFromAbort == 1) {
/*      */         
/* 3022 */         System.out.println("Spice run (TYP) aborted.  ");
/* 3023 */         System.out.println("See file " + spiceMsgFile + " for information.");
/* 3024 */         System.out.println("Curve " + s2iString.curveNameString[curveType] + " not generated.");
/* 3025 */         System.out.println("--- ");
/* 3026 */         return 1;
/*      */       } 
/*      */     } 
/*      */ 
/*      */     
/* 3031 */     (this.currentWave.waveData[0]).t = 0.0D;
/* 3032 */     (this.currentWave.waveData[0]).v.typ = 0.0D;
/* 3033 */     (this.currentWave.waveData[0]).v.min = 0.0D;
/* 3034 */     (this.currentWave.waveData[0]).v.max = 0.0D;
/*      */     
/* 3036 */     getSpiceWaveData WaveData1 = new getSpiceWaveData();
/* 3037 */     WaveData1.wave_p = this.currentWave;
/* 3038 */     WaveData1.getSpiceWaveData(model_p.simTime, spiceType, spiceOutFile, "typ");
/* 3039 */     this.currentWave = WaveData1.wave_p;
/*      */     
/* 3041 */     if (cleanup == 1) {
/*      */       
/* 3043 */       File inFile = new File(spiceInFile);
/* 3044 */       File outFile = new File(spiceOutFile);
/* 3045 */       File msgFile = new File(spiceMsgFile);
/* 3046 */       if (!inFile.delete())
/* 3047 */         System.out.println("Can't remove file " + spiceInFile); 
/* 3048 */       if (!outFile.delete())
/* 3049 */         System.out.println("Can't remove file " + spiceOutFile); 
/* 3050 */       if (spiceType != 5 && spiceType != 0 && 
/* 3051 */         !msgFile.delete()) {
/* 3052 */         System.out.println("Can't remove file " + spiceMsgFile);
/*      */       }
/* 3054 */       if (spiceType == 0) {
/*      */         
/* 3056 */         spiceOutFile = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".st0";
/* 3057 */         File outFile2 = new File(spiceOutFile);
/* 3058 */         outFile2.delete();
/*      */         
/* 3060 */         String hspiceIcFile = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".ic";
/* 3061 */         File outFile3 = new File(hspiceIcFile);
/* 3062 */         outFile3.delete();
/* 3063 */         String hspiceIc0File = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".ic0";
/* 3064 */         File outFile4 = new File(hspiceIc0File);
/* 3065 */         outFile4.delete();
/*      */       } 
/*      */     } 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 3072 */     headerLine = "*Min " + s2iString.curveNameString[curveType] + 
/* 3073 */       " curve for model " + model_p.modelName + "\n";
/*      */     
/* 3075 */     if (enablePin != null) {
/* 3076 */       inputBuffer = setPinDC1.setPinDC(enablePin, model_p.enable, 
/* 3077 */           1, 
/* 3078 */           "ENA", -1, spiceType);
/*      */     } else {
/* 3080 */       inputBuffer = "";
/*      */     } 
/* 3082 */     if (inputPin != null) {
/*      */       
/* 3084 */       dummyBuffer = setPinTran1.setPinTran(inputPin, model_p.polarity, outputState, 
/* 3085 */           "IN", -1, spiceType);
/* 3086 */       inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     } 
/*      */     
/* 3089 */     if (!goodies.IS_USE_NA(this.currentWave.V_fixture_min)) {
/*      */       
/* 3091 */       dummyBuffer = s2iString.DCSrcString(spiceType, "VFIXS2I", nodeList[nodeIndex], 
/* 3092 */           "0", this.currentWave.V_fixture_min);
/* 3093 */       inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     }
/*      */     else {
/*      */       
/* 3097 */       dummyBuffer = s2iString.DCSrcString(spiceType, "VFIXS2I", nodeList[nodeIndex], 
/* 3098 */           "0", this.currentWave.V_fixture);
/* 3099 */       inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     } 
/*      */     
/* 3102 */     setupPwrTmpCmd.setupPwrAndTempCmds(curveType, spiceType, powerPin, gndPin, 
/* 3103 */         powerClampPin, gndClampPin, Vcc.min, Gnd.min, 
/* 3104 */         VccClamp.min, GndClamp.min, model_p.tempRange.min);
/* 3105 */     powerBuffer = setupPwrTmpCmd.powerBuffer;
/* 3106 */     temperatureBuffer = setupPwrTmpCmd.temperatureBuffer;
/*      */     
/* 3108 */     analysisBuffer = setupTranCmd.setupTranCommands(spiceType, model_p.simTime, 
/* 3109 */         outputNodeName);
/*      */     
/* 3111 */     if (index < 10) {
/* 3112 */       namePrefixBuffer = String.valueOf(s2iString.spiceFileMinPrefix[curveType]) + "0" + index;
/*      */     } else {
/* 3114 */       namePrefixBuffer = String.valueOf(s2iString.spiceFileMinPrefix[curveType]) + index;
/*      */     } 
/* 3116 */     setSpFlNames1.setupSpiceFileNames(namePrefixBuffer, currentPin.pinName);
/* 3117 */     spiceInFile = setSpFlNames1.spiceInFile;
/* 3118 */     spiceOutFile = setSpFlNames1.spiceOutFile;
/* 3119 */     spiceMsgFile = setSpFlNames1.spiceMsgFile;
/*      */     
/* 3121 */     if (setSpInFile.setupSpiceInputFile(iterate, spiceType, spiceInFile, headerLine, 
/* 3122 */         spiceFile, model_p.modelFileMin, model_p.extSpiceCmdFile, loadBuffer, inputBuffer, powerBuffer, 
/* 3123 */         temperatureBuffer, analysisBuffer) == 1) {
/* 3124 */       return 1;
/*      */     }
/* 3126 */     if (callSpice1.callSpice(iterate, spiceCommand, spiceType, spiceInFile, 
/* 3127 */         spiceOutFile, spiceMsgFile) == 1) {
/*      */ 
/*      */       
/* 3130 */       int returnFromAbort = checkAbort.checkForAbort(spiceType, spiceOutFile, spiceMsgFile);
/* 3131 */       if (returnFromAbort == 1) {
/*      */         
/* 3133 */         System.out.println("Spice run (MIN) aborted.  ");
/* 3134 */         System.out.println("See file " + spiceMsgFile + " for information.");
/* 3135 */         System.out.println("Curve " + s2iString.curveNameString[curveType] + " not generated.");
/*      */       } 
/*      */     } 
/*      */     
/* 3139 */     WaveData1.wave_p = this.currentWave;
/* 3140 */     WaveData1.getSpiceWaveData(model_p.simTime, spiceType, spiceOutFile, "min");
/* 3141 */     this.currentWave = WaveData1.wave_p;
/* 3142 */     if (cleanup == 1) {
/*      */       
/* 3144 */       File inFile = new File(spiceInFile);
/* 3145 */       File outFile = new File(spiceOutFile);
/* 3146 */       File msgFile = new File(spiceMsgFile);
/* 3147 */       if (!inFile.delete())
/* 3148 */         System.out.println("Can't remove file " + spiceInFile); 
/* 3149 */       if (!outFile.delete())
/* 3150 */         System.out.println("Can't remove file " + spiceOutFile); 
/* 3151 */       if (spiceType != 5 && spiceType != 0 && 
/* 3152 */         !msgFile.delete()) {
/* 3153 */         System.out.println("Can't remove file " + spiceMsgFile);
/*      */       }
/* 3155 */       if (spiceType == 0) {
/*      */         
/* 3157 */         spiceOutFile = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".st0";
/* 3158 */         File outFile2 = new File(spiceOutFile);
/* 3159 */         outFile2.delete();
/*      */         
/* 3161 */         String hspiceIcFile = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".ic";
/* 3162 */         File outFile3 = new File(hspiceIcFile);
/* 3163 */         outFile3.delete();
/* 3164 */         String hspiceIc0File = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".ic0";
/* 3165 */         File outFile4 = new File(hspiceIc0File);
/* 3166 */         outFile4.delete();
/*      */       } 
/*      */     } 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 3173 */     headerLine = "*Max " + s2iString.curveNameString[curveType] + 
/* 3174 */       " curve for model " + model_p.modelName + "\n";
/*      */     
/* 3176 */     if (enablePin != null) {
/* 3177 */       inputBuffer = setPinDC1.setPinDC(enablePin, model_p.enable, 
/* 3178 */           1, 
/* 3179 */           "ENA", 1, spiceType);
/*      */     } else {
/* 3181 */       inputBuffer = "";
/*      */     } 
/* 3183 */     if (inputPin != null) {
/*      */       
/* 3185 */       dummyBuffer = setPinTran1.setPinTran(inputPin, model_p.polarity, outputState, 
/* 3186 */           "IN", 1, spiceType);
/* 3187 */       inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     } 
/*      */     
/* 3190 */     if (!goodies.IS_USE_NA(this.currentWave.V_fixture_max)) {
/*      */       
/* 3192 */       dummyBuffer = s2iString.DCSrcString(spiceType, "VFIXS2I", nodeList[nodeIndex], 
/* 3193 */           "0", this.currentWave.V_fixture_max);
/* 3194 */       inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     }
/*      */     else {
/*      */       
/* 3198 */       dummyBuffer = s2iString.DCSrcString(spiceType, "VFIXS2I", nodeList[nodeIndex], 
/* 3199 */           "0", this.currentWave.V_fixture);
/* 3200 */       inputBuffer = String.valueOf(inputBuffer) + "\n" + dummyBuffer;
/*      */     } 
/*      */     
/* 3203 */     setupPwrTmpCmd.setupPwrAndTempCmds(curveType, spiceType, powerPin, gndPin, 
/* 3204 */         powerClampPin, gndClampPin, Vcc.max, 
/* 3205 */         Gnd.max, VccClamp.max, GndClamp.max, 
/* 3206 */         model_p.tempRange.max);
/* 3207 */     powerBuffer = setupPwrTmpCmd.powerBuffer;
/* 3208 */     temperatureBuffer = setupPwrTmpCmd.temperatureBuffer;
/*      */     
/* 3210 */     analysisBuffer = setupTranCmd.setupTranCommands(spiceType, model_p.simTime, 
/* 3211 */         outputNodeName);
/*      */     
/* 3213 */     if (index < 10) {
/* 3214 */       namePrefixBuffer = String.valueOf(s2iString.spiceFileMaxPrefix[curveType]) + "0" + index;
/*      */     } else {
/* 3216 */       namePrefixBuffer = String.valueOf(s2iString.spiceFileMaxPrefix[curveType]) + index;
/*      */     } 
/* 3218 */     setSpFlNames1.setupSpiceFileNames(namePrefixBuffer, currentPin.pinName);
/* 3219 */     spiceInFile = setSpFlNames1.spiceInFile;
/* 3220 */     spiceOutFile = setSpFlNames1.spiceOutFile;
/* 3221 */     spiceMsgFile = setSpFlNames1.spiceMsgFile;
/*      */     
/* 3223 */     if (setSpInFile.setupSpiceInputFile(iterate, spiceType, spiceInFile, headerLine, 
/* 3224 */         spiceFile, model_p.modelFileMax, model_p.extSpiceCmdFile, loadBuffer, inputBuffer, powerBuffer, 
/* 3225 */         temperatureBuffer, analysisBuffer) == 1) {
/* 3226 */       return 1;
/*      */     }
/* 3228 */     if (callSpice1.callSpice(iterate, spiceCommand, spiceType, spiceInFile, 
/* 3229 */         spiceOutFile, spiceMsgFile) == 1) {
/*      */ 
/*      */       
/* 3232 */       int returnFromAbort = checkAbort.checkForAbort(spiceType, spiceOutFile, spiceMsgFile);
/* 3233 */       if (returnFromAbort == 1) {
/*      */         
/* 3235 */         System.out.println("Spice run (MAX) aborted.  ");
/* 3236 */         System.out.println("See file " + spiceMsgFile + " for information.");
/* 3237 */         System.out.println("Curve " + s2iString.curveNameString[curveType] + " not generated.");
/*      */       } 
/*      */     } 
/*      */     
/* 3241 */     WaveData1.wave_p = this.currentWave;
/* 3242 */     WaveData1.getSpiceWaveData(model_p.simTime, spiceType, spiceOutFile, "max");
/* 3243 */     this.currentWave = WaveData1.wave_p;
/*      */     
/* 3245 */     if (cleanup == 1) {
/*      */       
/* 3247 */       File inFile = new File(spiceInFile);
/* 3248 */       File outFile = new File(spiceOutFile);
/* 3249 */       File msgFile = new File(spiceMsgFile);
/* 3250 */       if (!inFile.delete())
/* 3251 */         System.out.println("Can't remove file " + spiceInFile); 
/* 3252 */       if (!outFile.delete())
/* 3253 */         System.out.println("Can't remove file " + spiceOutFile); 
/* 3254 */       if (spiceType != 5 && spiceType != 0 && 
/* 3255 */         !msgFile.delete()) {
/* 3256 */         System.out.println("Can't remove file " + spiceMsgFile);
/*      */       }
/* 3258 */       if (spiceType == 0) {
/*      */         
/* 3260 */         spiceOutFile = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".st0";
/* 3261 */         File outFile2 = new File(spiceOutFile);
/* 3262 */         outFile2.delete();
/*      */         
/* 3264 */         String hspiceIcFile = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".ic";
/* 3265 */         File outFile3 = new File(hspiceIcFile);
/* 3266 */         outFile3.delete();
/* 3267 */         String hspiceIc0File = String.valueOf(namePrefixBuffer) + currentPin.pinName + ".ic0";
/* 3268 */         File outFile4 = new File(hspiceIc0File);
/* 3269 */         outFile4.delete();
/*      */       } 
/*      */     } 
/*      */     
/* 3273 */     return 0;
/*      */   }
/*      */ }


/* Location:              D:\IBIS\s2ibis3_v1_1\java\!\generateWaveData.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */